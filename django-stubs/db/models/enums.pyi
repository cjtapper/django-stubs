import enum
from typing import Generic, List, Tuple, TypeVar

_T = TypeVar("_T")

class ChoicesMeta(enum.EnumMeta, Generic[_T]):
    @property
    def names(cls) -> List[str]: ...
    @property
    def choices(cls) -> List[Tuple(_T, str)]: ...
    @property
    def labels(cls) -> List[str]: ...
    @property
    def values(cls) -> List[_T]: ...

class Choices(enum.Enum, metaclass=ChoicesMeta[_T]): ...
class IntegerChoices(int, Choices[int]): ...

class TextChoices(str, Choices[str]):
    def _generate_next_value_(name: str, start: int, count: int, last_values: List[str]) -> str: ...
